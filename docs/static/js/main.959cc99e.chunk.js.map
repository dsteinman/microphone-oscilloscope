{"version":3,"sources":["Microphone.js","App.js","index.js","Vectorscope.js"],"names":["Microphone","options","chunkSize","volume","audioContext","audioSource","processor","createScriptProcessor","this","sampleRate","context","onaudioprocess","event","data","inputBuffer","getChannelData","muted","i","length","console","log","emit","shutdown","disconnect","AudioContext","success","stream","mediaStream","mediaStreamSource","createMediaStreamSource","createAudioProcessor","connect","gainNode","createGain","gain","value","_gain","destination","analyzer","audioAnalyser","createAnalyser","fail","e","error","navigator","mediaDevices","getUserMedia","microphone","constraints","audio","deviceId","exact","undefined","then","catch","video","getTracks","stop","close","EventEmitter","getMicrophones","a","enumerateDevices","deviceInfos","mics","deviceInfo","kind","id","name","label","toLowerCase","indexOf","push","microphones","startVisualization","canvas","channels","window","webkitAudioContext","Error","getAudioContext","vectorscope","Vectorscope","addData","channel","left","shift","right","processChannels","pop","processData","on","startRecording","num","mic","start","ChooseMic","props","n","mic1","className","map","m","key","mic2","href","onClick","preventDefault","onChooseMic","App","c","useState","setMics","setMic1","setMic2","micsChosen","setMicsChosen","visualizationActive","setVisualizationActive","canvasRef","React","createRef","useEffect","current","width","innerWidth","height","innerHeight","ref","ReactDOM","render","StrictMode","document","getElementById","VectorScope","buffersize","xp","yp","theme","dotSize","dotStrokeWidth","dotStrokeColor","dotFillColor","lineThickness","lineCap","lineColor","prototype","clear","clearRect","getContext","inL","inR","iBuffer","x","y","globalAlpha","dotAlpha","fillStyle","lineWidth","strokeStyle","beginPath","arc","Math","PI","fill","lineAlpha","moveTo","lineTo","stroke","module","exports"],"mappings":"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","file":"static/js/main.959cc99e.chunk.js","sourcesContent":["import EventEmitter from 'events';\n\nclass Microphone extends EventEmitter {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tthis.options = options? options : {};\n\n\t\tif ('chunkSize' in options) this.chunkSize = options.chunkSize;\n\t\telse this.chunkSize = 8192;\n\n\t\tif ('volume' in options) this.volume = options.volume;\n\t\telse this.volume = 1;\n\t}\n\n\tcreateAudioProcessor(audioContext, audioSource) {\n\t\tlet processor = audioContext.createScriptProcessor(this.chunkSize, 1, 1);\n\t\tconst sampleRate = audioSource.context.sampleRate;\n\t\tprocessor.onaudioprocess = (event) => {\n\t\t\tvar data = event.inputBuffer.getChannelData(0);\n\n\t\t\tif (this.muted) {\n\t\t\t\tfor (let i=0;i<data.length;i++) {\n\t\t\t\t\tdata[i] = 0;\n\t\t\t\t}\n\t\t\t\tconsole.log('muted');\n\t\t\t}\n\t\t\tthis.emit('data', data, sampleRate);\n\t\t};\n\t\tprocessor.shutdown = () => {\n\t\t\tprocessor.disconnect();\n\t\t\tthis.onaudioprocess = null;\n\t\t};\n\t\treturn processor;\n\t}\n\n\tstart() {\n\t\tthis.audioContext = new AudioContext();\n\n\t\tconst success = (stream) => {\n\t\t\tconsole.log('started recording');\n\t\t\tthis.mediaStream = stream;\n\t\t\tthis.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n\t\t\tthis.processor = this.createAudioProcessor(this.audioContext, this.mediaStreamSource);\n\t\t\tthis.mediaStreamSource.connect(this.processor);\n\t\t\tthis.gainNode = this.audioContext.createGain();\n\t\t\tthis.mediaStreamSource.connect(this.gainNode);\n\t\t\tthis.gainNode.gain.value = this.volume;\n\t\t\tif (this.muted) {\n\t\t\t\tthis._gain = this.gainNode.gain.value;\n\t\t\t\tthis.gainNode.gain.value = 0;\n\t\t\t}\n\n\t\t\tthis.gainNode.connect(this.processor);\n\t\t\tthis.processor.connect(this.audioContext.destination);\n\t\t\t\n\t\t\tif (this.options.analyzer) {\n\t\t\t\tthis.audioAnalyser = this.audioContext.createAnalyser();\n\t\t\t\tthis.gainNode.connect(this.audioAnalyser);\n\t\t\t\tthis.emit('analyser', this.audioAnalyser);\n\t\t\t}\n\t\t};\n\n\t\tconst fail = (e) => {\n\t\t\tconsole.error('recording failure', e);\n\t\t\tdebugger;\n\t\t};\n\n\t\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n\t\t\tconst microphone = this.options.microphone;\n\t\t\tconst constraints = {\n\t\t\t\taudio: {\n\t\t\t\t\tdeviceId: microphone ? {exact: microphone} : undefined\n\t\t\t\t}\n\t\t\t};\n\t\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t.then(success)\n\t\t\t.catch(fail);\n\t\t}\n\t\telse {\n\t\t\tnavigator.getUserMedia({\n\t\t\t\tvideo: false,\n\t\t\t\taudio: true\n\t\t\t}, success, fail);\n\t\t}\n\t}\n\n\tstop() {\n\t\t\n\t\tif (this.mediaStream) {\n\t\t\tthis.mediaStream.getTracks()[0].stop();\n\t\t}\n\t\tif (this.mediaStreamSource) {\n\t\t\tthis.mediaStreamSource.disconnect();\n\t\t}\n\t\tif (this.processor) {\n\t\t\tthis.processor.shutdown();\n\t\t}\n\t\tif (this.audioContext) {\n\t\t\tthis.audioContext.close();\n\t\t}\n\t}\n\n\tsetVolume(volume) {\n\t\tthis.volume = volume;\n\n\t\tthis._gain = volume;\n\t\tthis.gainNode.gain.value = volume;\n\t}\n\n\tsetMuted(muted) {\n\t\tthis.muted = muted;\n\n\t\tif (this.gainNode) {\n\t\t\tif (muted) {\n\t\t\t\tthis._gain = this.gainNode.gain.value;\n\t\t\t\tthis.gainNode.gain.value = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.gainNode.gain.value = this._gain || 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default Microphone;\n","import React, {useState, useEffect} from 'react';\nimport Microphone from './Microphone';\nimport Vectorscope from './Vectorscope';\n\nfunction getAudioContext() {\n  let audioContext;\n  if (window.AudioContext) {\n    audioContext = new window.AudioContext();\n  }\n  else if (window.webkitAudioContext) {\n    console.log('creating webkitAudioContext');\n    audioContext = new window.webkitAudioContext();\n  }\n  else {\n    throw new Error('no AudioContext');\n  }\n  return audioContext;\n}\n\nasync function getMicrophones() {\n  const deviceInfos = await navigator.mediaDevices.enumerateDevices();\n  const mics = [];\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    if (deviceInfo.kind === 'audioinput') {\n      let id = deviceInfo.deviceId;\n      let name = deviceInfo.label || 'microphone '+i;\n      if (i === 0 && name.toLowerCase().indexOf('default')>-1) continue;\n      mics.push({\n        id,\n        name\n      });\n    }\n  }\n  return mics;\n}\n\nconst microphones = [];\n\nfunction startVisualization(canvas) {\n  let channels = [\n      [],\n      []\n  ];\n  \n  let audioContext = getAudioContext();\n  \n  let vectorscope = new Vectorscope(audioContext);\n  \n  const processData = function() {\n    if (channels[0].length && channels[1].length) {\n      if (channels[0].length == channels[1].length) {\n        let left = channels[0].shift();\n        let right = channels[1].shift();\n        // console.log('combined', left.length, right.length);\n  \n        if (canvas) {\n          vectorscope.processChannels(left, right, canvas);\n        }\n        else {\n          console.log('no caanvas');\n        }\n        \n      }\n      else {\n        console.log('oops', channels[0].length, channels[0].length);\n      }\n    }\n    else {\n      if (channels[0].length && channels[1].length === 0) {\n        channels[0] = [channels[0].pop()];\n      }\n      else if (channels[1].length && channels[0].length === 0) {\n        channels[1] = [channels[0].pop()];\n      }\n      else {\n      \n      }\n    }\n  }\n  \n  const addData = function(channel, data) {\n    channels[channel].push(data);\n    processData();\n  }\n  \n  microphones[0].on('data', function(data) {\n    addData(0, data);\n  });\n  microphones[1].on('data', function(data) {\n    addData(1, data);\n  });\n}\n\nfunction App() {\n  let [mics, setMics] = useState([]);\n  let [mic1, setMic1] = useState(null);\n  let [mic2, setMic2] = useState(null);\n  let [micsChosen, setMicsChosen] = useState(false);\n  let [visualizationActive, setVisualizationActive] = useState(false);\n  \n  let canvasRef = React.createRef();\n  \n  useEffect(() => {\n    if (!visualizationActive && canvasRef.current) {\n      canvasRef.current.width = window.innerWidth;\n      canvasRef.current.height = window.innerHeight;\n      setVisualizationActive(true);\n      startVisualization(canvasRef.current);\n    }\n    \n    (async () => {\n      if (mics.length === 0) {\n        let mics = await getMicrophones();\n        setMics(mics);\n      }\n    })();\n    \n  });\n  \n  \n  const choose = (mic) => {\n    if (!mic1) {\n      setMic1(mic);\n      startRecording(0, mic);\n    }\n    else if (!mic2) {\n      setMic2(mic);\n      startRecording(1, mic);\n      setMicsChosen(true);\n    }\n  };\n  \n  let c;\n  if (micsChosen) {\n    c = (<div>\n      <canvas ref={canvasRef} id=\"c\"/>\n    </div>)\n  }\n  else {\n    c = (<ChooseMic mics={mics} onChooseMic={choose} mic1={mic1} mic2={mic2} />);\n  }\n  \n  return (\n      <div className=\"App\">\n        {c}\n      </div>\n  );\n}\n\nfunction startRecording(num, mic) {\n  microphones[num] = new Microphone({\n    microphone: mic.id,\n    chunkSize: 512\n  });\n  microphones[num].start();\n  return microphones[num];\n}\n\nfunction ChooseMic(props) {\n  let n = (props.mic1)? 'Right' : 'Left'\n  \n  if (props.mics.length < 2) {\n    let mics;\n    if (props.mics.length === 1) mics = (<div>Found 1 microphone: {props.mics[0].name}</div>)\n    return (<div>\n      Sorry this demo requires 2 microphones.\n      <br/>\n      <br/>\n      {mics}\n    </div>)\n  }\n  \n  return (\n    <div className=\"choose\">\n      <strong>Choose {n} Microphone:</strong>\n      <ul>\n        {props.mics.map((m, i) => {\n          const handler = (e) => {\n            e.preventDefault();\n            props.onChooseMic(m);\n          };\n          if (props.mic1 && m.id === props.mic1.id) {\n            return (<li key={i} >\n              LEFT: {m.name}\n            </li>);\n          }\n          if (props.mic2 && m.id === props.mic2.id) {\n            return (<li key={i} >\n              RIGHT: {m.name}\n            </li>);\n          }\n          return (<li key={i} >\n                <a href=\"#\" onClick={handler}>{m.name}</a>\n          </li>);\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","function VectorScope(audio) {\n\tthis.buffersize = 512;\n\tthis.xp = null;\n\tthis.yp = null;\n\tthis.theme = {\n\t\tdotSize: 0,\n\t\tdotStrokeWidth: 0,\n\t\tdotStrokeColor: null,\n\t\tdotFillColor: null,\n\t\tlineThickness: 1,\n\t\tlineCap: 'round',\n\t\tlineColor: '#FFF'\n\t};\n}\n\nVectorScope.prototype.clear = function () {\n\tvar width = this.canvas.width;\n\tvar height = this.canvas.height;\n\tthis.context.clearRect(0, 0, width, height);\n};\n\nVectorScope.prototype.processChannels = function (left, right, canvas) {\n\tif (!left || !right) return;\n\t\n\tthis.context = canvas.getContext('2d');\n\tvar me = this;\n\t\n\tvar inL = left;\n\tvar inR = right;\n\t\n\tvar width = canvas.width;\n\tvar height = canvas.height;\n\t\n\tthis.context.clearRect(0, 0, width, height);\n\t\n\tfor (var iBuffer = 0; iBuffer < me.buffersize; iBuffer++) {\n\t\tif (this.xp !== null && this.yp !== null) {\n\t\t\t\n\t\t\tvar x = (inL[iBuffer] + 1.0) * 0.5 * width;\n\t\t\tvar y = (1.0 - inR[iBuffer]) * 0.5 * height;\n\t\t\t\n\t\t\tif (this.theme.dotSize) {\n\t\t\t\tthis.context.globalAlpha = this.theme.dotAlpha;\n\t\t\t\tthis.context.lineCap = this.theme.lineCap;\n\t\t\t\tif (this.theme.dotFillColor) this.context.fillStyle = this.theme.dotFillColor;\n\t\t\t\tif (this.theme.dotStrokeWidth) this.context.lineWidth = this.theme.dotStrokeWidth;\n\t\t\t\tif (this.theme.dotStrokeColor) this.context.strokeStyle = this.theme.dotStrokeColor;\n\t\t\t\tthis.context.beginPath();\n\t\t\t\tif (this.theme.dotStrokeWidth) {\n\t\t\t\t\tthis.context.arc(x, y, (this.theme.dotSize + this.theme.dotStrokeWidth) * 0.5, 0.0, 2.0 * Math.PI, false);\n\t\t\t\t\t// this.context.stroke();\n\t\t\t\t\tthis.context.fill();\n\t\t\t\t}\n\t\t\t\tthis.context.arc(x, y, this.theme.dotSize * 0.5, 0.0, 2.0 * Math.PI, false);\n\t\t\t\tif (this.theme.dotFillColor) {\n\t\t\t\t\tthis.context.fill();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.theme.lineThickness) {\n\t\t\t\tif ('lineAlpha' in this.theme) this.context.globalAlpha = this.theme.lineAlpha;\n\t\t\t\tthis.context.strokeStyle = this.theme.lineColor;\n\t\t\t\tthis.context.lineCap = this.theme.lineCap;\n\t\t\t\tthis.context.lineWidth = this.theme.lineThickness;\n\t\t\t\tthis.context.beginPath();\n\t\t\t\tthis.context.moveTo(x, y);\n\t\t\t\tthis.context.lineTo(me.xp, me.yp);\n\t\t\t\tthis.context.stroke();\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.xp = x;\n\t\tthis.yp = y;\n\t}\n\t\n};\n\nmodule.exports = VectorScope;\n"],"sourceRoot":""}